 server {
        listen 80;
        #server_name  182.61.5.92;

        root   /usr/share/nginx/html;
        index  /etc/nginx/mime.types;

        #gzip on;
        # 开启gzip
        gzip on;
        gzip_static on;
        # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩
        gzip_min_length 1k;
        gzip_http_version 1.0;
        # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间,越小压缩效果越差，但是越大处理越慢，所以一般取中间值;
        gzip_comp_level 9;
        gzip_proxied any;
        # 进行压缩的文件类型。
        # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
        gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
        # 设置压缩所需要的缓冲区大小
        gzip_buffers 4 16k;
        # 是否在http header中添加Vary: Accept-Encoding，建议开启
        gzip_vary on;
        gzip_disable "MSIE [1-6]\.";



        location / {
            try_files $uri /index.html;
        }

        # 跨域配置
       location /api{
                   add_header 'Access-Control-Allow-Origin' $http_origin;
                   add_header 'Access-Control-Allow-Credentials' 'true';
                   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                   add_header 'Access-Control-Allow-Headers' '*';
                   if ($request_method = 'OPTIONS') {
                       add_header 'Access-Control-Max-Age' 1728000;
                       add_header 'Content-Type' 'text/plain; charset=utf-8';
                       add_header 'Content-Length' 0;
                       add_header 'Access-Control-Allow-Origin' $http_origin;
                       add_header 'Access-Control-Allow-Credentials' 'true';
                       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                       add_header 'Access-Control-Allow-Headers' '*';
                       return 204;
                   }
                proxy_pass http://localhost:8080/api;
       	        proxy_set_header Host $host;
       	        proxy_set_header X-Real-IP $remote_addr;
       	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       	        proxy_set_header X-Forwarded-Proto $scheme;
            }



    }
